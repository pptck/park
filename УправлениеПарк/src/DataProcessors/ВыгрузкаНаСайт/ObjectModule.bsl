
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Подготовить архив для сайта.
// 
// Возвращаемое значение:
//  Строка - Ссылка на временное хранилище
Функция ПодготовитьАрхив() Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		 |	ПРЕДСТАВЛЕНИЕ(УНИКАЛЬНЫЙИДЕНТИФИКАТОР(Атракционы.Ссылка)) КАК Идентификатор,
		 |	ПРЕДСТАВЛЕНИЕ(Атракционы.Ссылка) КАК Аттракцион,
		 |	ПРЕДСТАВЛЕНИЕ(Атракционы.ВидАттракциона) КАК ВидАттракциона,
		 |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена,
		 |	Атракционы.Фото
		 |ИЗ
		 |	Справочник.Атракционы КАК Атракционы
		 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних
		 |		ПО Атракционы.Ссылка = ЦеныНоменклатурыСрезПоследних.Номенклатура";
		

	Выборка = Запрос.Выполнить().Выбрать();
	
	ИмяКаталога = ПолучитьИмяВременногоФайла("");
	СоздатьКаталог(ИмяКаталога);
	
	ОписаниеАттракционов = Новый Массив();
	
	ШаблонИмениКартинки = "%1%2img%2%3.jpg";
	
	Пока Выборка.Следующий() Цикл
	
		ОписаниеАттракциона = Новый Структура();	
		ОписаниеАттракциона.Вставить("Идентификатор", Выборка.Идентификатор);
		ОписаниеАттракциона.Вставить("Аттракцион", Выборка.Аттракцион);
		ОписаниеАттракциона.Вставить("ВидАттракциона", Выборка.ВидАттракциона);
		ОписаниеАттракциона.Вставить("Цена", Выборка.Цена);		
		
		ДанныеФото = Выборка.Фото.Получить();
		
		Если ДанныеФото = Неопределено Тогда
			ОписаниеАттракциона.Вставить("Фото", Неопределено);
		Иначе
			ИмяФайла = СтрШаблон(ШаблонИмениКартинки, ИмяКаталога, ПолучитьРазделительПути(), Выборка.Идентификатор);
			ДанныеФото.Записать(ИмяФайла);
			ОписаниеАттракциона.Вставить("Фото", СтрШаблон(ШаблонИмениКартинки, "", ПолучитьРазделительПути(), Выборка.Идентификатор));
		КонецЕсли;
		
		ОписаниеАттракционов.Добавить(ОписаниеАттракциона);
		
	КонецЦикла;
	
	ШаблонИмениФайла = "%1%2export.json";
	ИмяФайлаВыгрузки = СтрШаблон(ШаблонИмениФайла, ИмяКаталога, ПолучитьРазделительПути());
	
	Запись = Новый ЗаписьJSON();
	Запись.ОткрытьФайл(ИмяФайлаВыгрузки);
	ЗаписатьJSON(Запись, ОписаниеАттракционов);
	Запись.Закрыть();
	
	ЗаписатьЗначениеJSON(ОписаниеАттракционов);
	
	Архиватор = Новый ЗаписьZipФайла();
	Архиватор.Добавить(ИмяКаталога + ПолучитьРазделительПути()+ "*.*", РежимСохраненияПутейZIP.СохранятьОтносительныеПути, РежимОбработкиПодкаталоговZIP.ОбрабатыватьРекурсивно);
	ДанныеАрхива = Архиватор.ПолучитьДвоичныеДанные();
	
	УдалитьФайлы(ИмяКаталога);
	
	Возврат ПоместитьВоВременноеХранилище(ДанныеАрхива);
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

// Код процедур и функций

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти

#Область Инициализация

#КонецОбласти

#КонецЕсли
